package com.hck.zhuanqian.ui;import org.json.JSONObject;import android.os.Bundle;import android.os.Handler;import android.util.Log;import android.view.View;import android.widget.TextView;import com.datouniao.AdPublisher.AppConfig;import com.datouniao.AdPublisher.AppConnect;import com.datouniao.AdPublisher.GetAmountNotifier;import com.datouniao.AdPublisher.ReceiveNotifier;import com.datouniao.AdPublisher.SpendNotifier;import com.hck.zhuanqian.R;import com.hck.zhuanqian.data.Data;import com.hck.zhuanqian.data.HttpUrls;import com.hck.zhuanqian.net.JsonHttpResponseHandler;import com.hck.zhuanqian.net.RequestParams;import com.hck.zhuanqian.util.HttpUtil;import com.hck.zhuanqian.widget.Toasts;/** *  * @author *  */public class DaTouNiaoActivity extends BaseActivity {	private int num;	private String content;	private int point;	private TextView nameTextView, contenTextView;	private int kid;	private AppConnect appConnectInstance;	@Override	protected void onCreate(Bundle savedInstanceState) {		super.onCreate(savedInstanceState);		initAd();		setContentView(R.layout.activity_play_dl);		initView();		num = getIntent().getIntExtra("num", 5);		content = getIntent().getStringExtra("neirong");		kid = getIntent().getIntExtra("kid", 0);		initDate();	}	private void initAd() {		try {			AppConfig config = new AppConfig();			config.setAppID("3ce2c1ce-2bdc-43c8-9fa8-4f7854484f0f");			config.setSecretKey("rdqzhfdmzvas");			config.setCtx(this);			config.setReceiveNotifier(new ReceiveNotifier() {				@Override				public void GetReceiveResponse(String _currencyName,						float receiveAmount, float totalAmount,						String serverOrderID, String appName) {					point = 0;					point = (int) receiveAmount;					money = 0;					money = point;					if (point > 500) {						point = 150;					}					if (point > 0) {						savePoint();					}					handler.sendEmptyMessage(point);				}			});			appConnectInstance = AppConnect.getInstance(config);		} catch (Exception e) {			Toasts.toast(this, "请重试");			finish();		}	}	Handler handler = new Handler() {		public void handleMessage(android.os.Message msg) {			huafei(msg.what);		};	};	private void initView() {		nameTextView = (TextView) findViewById(R.id.play_dl_name);		contenTextView = (TextView) findViewById(R.id.play_dl_content);	}	private void initDate() {		nameTextView.setText("本区每天限制下载试用" + num + "个软件");		contenTextView.setText(content);	}	public void startGetMoney(View view) {		if (appConnectInstance == null) {			Toasts.toast(this, "初始化数据失败, 请重试");			return;		}		appConnectInstance.ShowAdsOffers();	}	private void savePoint() {		params = new RequestParams();		point = hashYQM(point);		params.put("kindid", kid + "");		params.put("num", num + "");		params.put("type", "大头鸟");		if (Data.userBean == null) {			Toasts.toast(this, "增加金币异常  请重新登录");			return;		}		params.put("uid", Data.userBean.getId() + "");		params.put("money", point + "");		HttpUtil.getHttpUtil().get(HttpUrls.addMoneyP, params,				new JsonHttpResponseHandler() {					@Override					public void onFinish(String url) {						super.onFinish(url);						huafei(money);					}					@Override					public void onFailure(Throwable error, String content) {						super.onFailure(error, content);						Toasts.toast(getApplicationContext(), "网络异常 增加金币失败 ");					}					@Override					public void onSuccess(int statusCode, JSONObject response) {						super.onSuccess(statusCode, response);						try {							isOk = response.getBoolean("isok");							if (isOk) {								Toasts.toast(DaTouNiaoActivity.this, nt);								Data.userBean.setAllKeDouBi(Data.userBean										.getAllKeDouBi() + point);							} else {								if (response.getInt("type") == 1) {									Toasts.toast(DaTouNiaoActivity.this,											"获取金币失败 本区每天限制下载" + num + "个应用  ");								} else {									Toasts.toast(getApplicationContext(),											"网络异常 增加金币失败 ");								}							}						} catch (Exception e) {							Toasts.toast(DaTouNiaoActivity.this, "网络异常 增加金币失败 ");						}					}				});	}	private void huafei(int money) {		try {			appConnectInstance.SpendAmount(money, new SpendNotifier() {				@Override				public void GetSpendResponseFailed(String arg0) {				}				@Override				public void GetSpendResponse(String arg0, float arg1) {				}			});		} catch (Exception e) {		}	}	@Override	protected void onDestroy() {		super.onDestroy();		if (appConnectInstance != null) {			appConnectInstance.close();		}	}	@Override	protected void onResume() {		super.onResume();		try {			appConnectInstance.GetAmount(new GetAmountNotifier() {								@Override				public void GetAmountResponseFailed(String arg0) {									}								@Override				public void GetAmountResponse(String arg0, float arg1) {					if (arg1> 0) {						handler.sendEmptyMessage((int)arg1);					}				}			});		} catch (Exception e) {		}	}}