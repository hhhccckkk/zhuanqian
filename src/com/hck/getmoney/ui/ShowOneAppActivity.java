package com.hck.getmoney.ui;import org.json.JSONObject;import android.content.ComponentName;import android.content.Context;import android.content.Intent;import android.content.ServiceConnection;import android.os.Bundle;import android.os.IBinder;import android.util.Log;import android.view.View;import android.view.View.OnClickListener;import android.widget.Button;import android.widget.ImageView;import android.widget.TextView;import com.hck.kedouzq.R;import com.hck.getmoney.bean.Apps;import com.hck.getmoney.data.Data;import com.hck.getmoney.data.HttpUrls;import com.hck.getmoney.net.JsonHttpResponseHandler;import com.hck.getmoney.net.RequestParams;import com.hck.getmoney.util.HttpUtil;import com.hck.getmoney.util.MyBroadCast;import com.hck.getmoney.util.MyService;import com.hck.getmoney.util.UpdateManager;import com.hck.getmoney.widget.PDialog;import com.hck.getmoney.widget.Toasts;import com.nostra13.universalimageloader.core.ImageLoader;public class ShowOneAppActivity extends BaseActivity implements BaseMethod {	private ImageView icon;	private TextView nameTextView;	private Button button;	private TextView textView1, textView2, textView3, textView4;	private TextView conteTextView;	private ImageView imageView;	private con c;	public static ShowOneAppActivity shActivity;	private Apps apps;	private int index;	private int kid;	private int num;	public static boolean downOk = false;	@Override	protected void onCreate(Bundle savedInstanceState) {		super.onCreate(savedInstanceState);		setContentView(R.layout.activity_show_oneapp);		initViews();		initDatas();		setListener();		getData();		setDate();		shActivity = this;	}	@Override	public void setDate() {		nameTextView.setText(apps.getName());		ImageLoader.getInstance().displayImage(apps.getImage1(), icon);		ImageLoader.getInstance().displayImage(apps.getImage2(), imageView);		if (apps.getIszhuce() == 1) {			textView2.setText("下载安装打开后  ——进行注册 ——注册后 进入个人页面 使用"					+ apps.getUseTime() / 1000 + "秒+" + apps.getPrice1()					+ "金币");		} else {			textView2.setText("下载安装打开后使用" + apps.getUseTime() / 1000 + "秒"					);		}		textView4.setText("24小时候进行签到 " );		conteTextView.setText(apps.getNeirong());		textView1.setText("+" + apps.getPrice1() + "");		textView3.setText("+" + apps.getPrice2() + "");	}	@Override	public void initDatas() {		Intent intent = getIntent();		apps = (Apps) intent.getSerializableExtra("app");		kid = getIntent().getIntExtra("kid", 0);		num = getIntent().getIntExtra("num", 5);	}	@Override	public void initViews() {		icon = (ImageView) findViewById(R.id.one_app_img);		nameTextView = (TextView) findViewById(R.id.one_app_name);		button = (Button) findViewById(R.id.down);		textView1 = (TextView) findViewById(R.id.one_app_tx1);		textView2 = (TextView) findViewById(R.id.one_app_tx2);		textView3 = (TextView) findViewById(R.id.one_app_tx3);		textView4 = (TextView) findViewById(R.id.one_app_tx4);		conteTextView = (TextView) findViewById(R.id.oneapp_content);		imageView = (ImageView) findViewById(R.id.oneapp_image2);	}	@Override	public void setListener() {		button.setOnClickListener(new OnClickListener() {			@Override			public void onClick(View arg0) {				initDate();				new UpdateManager(ShowOneAppActivity.this).downloadApk(apps						.getDownurl(),apps.getId());				downOk=true;				AppsFragment.playIsOk=true;			}		});	}		private void initDate() {		MyBroadCast.app = apps;	}	public void buindService() {		c = new con();		this.bindService(new Intent(this, MyService.class), c,				Context.BIND_AUTO_CREATE);		MyService.pkg = apps.getBaoming();		MyService.zhuce = apps.getActivity();		MyService.isZhuce = apps.getIszhuce();		MyService.time = apps.getUseTime();	}	@Override	protected void onResume() {		try {			if (c != null) {				this.unbindService(c);				MyService.isFish = true;				MyService.myService.stop();			}		} catch (Exception e) {		}		if (downOk) {			this.finish();			downOk=false;		}		super.onResume();	}	class con implements ServiceConnection {		@Override		public void onServiceConnected(ComponentName name, IBinder service) {		}		@Override		public void onServiceDisconnected(ComponentName name) {		}	}	@Override	protected void onDestroy() {		super.onDestroy();		MyService.pkg = null;		downOk=false;	}	@Override	public void getData() {	}	public void playAppOk() {				saveUserApp();		AppsFragment.playIsOk = true;		this.finish();	}		private void saveUserApp() {		RequestParams params = new RequestParams();		params.put("id", apps.getId() + "");		params.put("uid", Data.userBean.getId() + "");		HttpUtil.getHttpUtil().get(HttpUrls.saveUserApp, params,				new JsonHttpResponseHandler() {					@Override					public void onFinish(String url) {						super.onFinish(url);					}					@Override					public void onSuccess(int statusCode, JSONObject response) {						super.onSuccess(statusCode, response);						Log.i("hck", "onsss: "+response.toString());						try {							if (response.getBoolean("isok")==true) {								savePoint();							}							else {								Toasts.toast(ShowOneAppActivity.this, "你已经安装过该应用了");							}						} catch (Exception e) {						}					}					@Override					public void onFailure(Throwable e, JSONObject errorResponse) {						super.onFailure(e, errorResponse);						Toasts.toast(ShowOneAppActivity.this, "网络异常  增加金币失败");					}				});	}	private void savePoint() {		final int point = apps.getPrice1();		RequestParams params = new RequestParams();		params.put("kindid", kid + "");		params.put("num", num + "");		params.put("type", "科哥");		params.put("uid", Data.userBean.getId() + "");		params.put("money", apps.getPrice1() + "");		HttpUtil.getHttpUtil().get(HttpUrls.addMoneyP, params,				new JsonHttpResponseHandler() {					@Override					public void onFinish(String url) {						super.onFinish(url);						PDialog.hidenDialog();					}					@Override					public void onFailure(Throwable error, String content) {						super.onFailure(error, content);						Toasts.toast(ShowOneAppActivity.this, "网络异常 增加蝌蚪币失败 ");					}					@Override					public void onSuccess(int statusCode, JSONObject response) {						super.onSuccess(statusCode, response);						try {							boolean isOk = response.getBoolean("isok");							if (isOk) {								Toasts.toast(ShowOneAppActivity.this, "获取蝌蚪币: "										+ point + "个");								Data.userBean.setAllKeDouBi(Data.userBean										.getAllKeDouBi() + point);							} else {								if (response.getInt("type") == 1) {									Toasts.toast(ShowOneAppActivity.this,											"获取蝌蚪币失败 本区每天限制下载" + num + "个应用  ");								} else {									Toasts.toast(ShowOneAppActivity.this,											"网络异常 增加蝌蚪币失败 ");								}							}						} catch (Exception e) {							Toasts.toast(ShowOneAppActivity.this,									"网络异常 增加蝌蚪币失败 ");						}					}				});	}}