package com.hck.zhuanqian.ui;import java.util.ArrayList;import java.util.List;import org.json.JSONObject;import android.os.Bundle;import android.support.v4.app.Fragment;import android.util.Log;import android.view.LayoutInflater;import android.view.View;import android.view.ViewGroup;import android.widget.AdapterView;import android.widget.AdapterView.OnItemClickListener;import android.widget.ListView;import com.hck.zhuanqian.R;import com.hck.zhuanqian.adpter.TGAdpter;import com.hck.zhuanqian.bean.TuiGBean;import com.hck.zhuanqian.data.Data;import com.hck.zhuanqian.data.HttpUrls;import com.hck.zhuanqian.net.JsonHttpResponseHandler;import com.hck.zhuanqian.net.RequestParams;import com.hck.zhuanqian.util.HttpUtil;import com.hck.zhuanqian.util.JsonUtil;import com.hck.zhuanqian.widget.AlertDialogs;import com.hck.zhuanqian.widget.PDialog;import com.hck.zhuanqian.widget.Toasts;public class ShowTgFragment extends Fragment implements BaseAlert{	private ListView listView;	private List<TuiGBean> beans;	private TGAdpter adpter;	private long postion; private int postio; private RequestParams params; private boolean isGetdataOk; @Overridepublic View onCreateView(LayoutInflater inflater, ViewGroup container,		Bundle savedInstanceState) {	 View view =inflater.inflate(R.layout.activity_show_tg, null);		listView = (ListView) view.findViewById(R.id.tg_list);					getDate();				setListener();	return view;}		private void getDate() {		Log.d("hck", "getdate ");		PDialog.showDialog(this.getActivity(), "请稍等", "正在获取数据");		params = new RequestParams();		params.put("uid", Data.userBean.getId() + "");		HttpUtil.getHttpUtil().get(HttpUrls.getTgP, params,				new JsonHttpResponseHandler() {					@Override					public void onFinish(String url) {						super.onFinish(url);						PDialog.hidenDialog();					}					@Override					public void onFailure(Throwable error, String content) {						super.onFailure(error, content);					}					@Override					public void onSuccess(int statusCode, JSONObject response) {						super.onSuccess(statusCode, response);						beans = new ArrayList<TuiGBean>();						JsonUtil.getJsonUtil().getTg(response, beans);						setDate();					}				});	}	private void setDate() {		Log.d("hck", "setDatesetDatesetDate");		adpter = new TGAdpter(beans, this.getActivity());		listView.setAdapter(adpter);	}	private void setListener() {		listView.setOnItemClickListener(new OnItemClickListener() {			@Override			public void onItemClick(AdapterView<?> arg0, View arg1, int arg2,					long arg3) {				AlertDialogs.alertDialog(getActivity(),						ShowTgFragment.this, "确定删除吗?", "取消", "删除",						"message_no", arg2+"");				postio=arg2;											}		});	}	private void deleteTG(Long id) {		PDialog.showDialog(getActivity(), "请稍等", "正在删除...");		params = new RequestParams();		params.put("tid", id + "");		HttpUtil.getHttpUtil().get(HttpUrls.deleteTGP, params,				new JsonHttpResponseHandler() {					@Override					public void onFinish(String url) {						super.onFinish(url);						PDialog.hidenDialog();					}					@Override					public void onSuccess(int statusCode, JSONObject response) {						super.onSuccess(statusCode, response);						PDialog.hidenDialog();						beans.remove(postio);						adpter.notifyDataSetChanged();						Toasts.toast(getActivity(), "删除成功");					}					@Override					public void onFailure(Throwable error, String content) {						super.onFailure(error, content);						Toasts.toast(getActivity(), "删除失败 请检查你的网络");					}				});	}	@Override	public void doLeftButton(String value) {			}	@Override	public void doRightButton(String value) {		deleteTG(postion);	}	@Override	public void doSometing(String value) {			}}