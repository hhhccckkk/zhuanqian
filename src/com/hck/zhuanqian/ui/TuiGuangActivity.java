package com.hck.zhuanqian.ui;import java.io.InputStream;import java.util.ArrayList;import android.content.DialogInterface;import android.content.Intent;import android.graphics.BitmapFactory;import android.graphics.Matrix;import android.net.Uri;import android.os.Bundle;import android.support.v4.app.Fragment;import android.support.v4.view.ViewPager;import android.support.v4.view.ViewPager.OnPageChangeListener;import android.util.DisplayMetrics;import android.view.KeyEvent;import android.view.View;import android.view.View.OnClickListener;import android.view.animation.Animation;import android.view.animation.TranslateAnimation;import android.widget.Button;import android.widget.ImageView;import android.widget.TextView;import com.hck.zhuanqian.R;import com.hck.zhuanqian.adpter.AppsPagerAdapter;import com.hck.zhuanqian.util.AppManager;import com.hck.zhuanqian.widget.CustomAlertDialog;public class TuiGuangActivity extends BaseFragment {	private TextView titleTextView;	@Override	protected void onCreate(Bundle savedInstanceState) {		super.onCreate(savedInstanceState);		setContentView(R.layout.activity_tuiguang);		initView();		initPagerViewer();		setListener();	}	public String getFromRaw() {		String result = "";		try {			InputStream in = getResources().openRawResource(R.raw.app);			// 获取文件的字节数			int lenght = in.available();			// 创建byte数组			byte[] buffer = new byte[lenght];			in.read(buffer);			result = new String(buffer);		} catch (Exception e) {			e.printStackTrace();		}		return result;	}	private void initView() {		titleTextView = (TextView) findViewById(R.id.title_text);		titleTextView.setText("推广赚钱（推荐）");		views = new ArrayList<Fragment>();		TuiGuangFragment tuiGuangFragment = new TuiGuangFragment();		views.add(tuiGuangFragment);		ShowTgFragment tFragment = new ShowTgFragment();		views.add(tFragment);		textView1 = (TextView) findViewById(R.id.app_tg);		textView2 = (TextView) findViewById(R.id.app_my_tg);		InitImageView();	}	private void InitImageView() {		cursor = (ImageView) findViewById(R.id.cursor);		bmpW = BitmapFactory.decodeResource(getResources(), R.drawable.roller)				.getWidth();		DisplayMetrics dm = new DisplayMetrics();		getWindowManager().getDefaultDisplay().getMetrics(dm);		int screenW = dm.widthPixels;		offset = (screenW / 2 - bmpW) / 2;		Matrix matrix = new Matrix();		matrix.postTranslate(offset, 0);		cursor.setImageMatrix(matrix);	}	private void initPagerViewer() {		pager = (ViewPager) findViewById(R.id.viewpage);		pager.setAdapter(new AppsPagerAdapter(getSupportFragmentManager(),				views));		pager.setCurrentItem(0);		pager.setOnPageChangeListener(new MyOnPageChangeListener());	}	public void setListener() {		textView1.setOnClickListener(new MyOnClickListener(0));		textView2.setOnClickListener(new MyOnClickListener(1));		backButton.setOnClickListener(new OnClickListener() {			@Override			public void onClick(View arg0) {				finish();			}		});	}	public class MyOnPageChangeListener implements OnPageChangeListener {		int one = offset * 2 + bmpW;		@Override		public void onPageSelected(int arg0) {			Animation animation = null;			switch (arg0) {			case 0:				animation = new TranslateAnimation(one, 0, 0, 0);				textView1.setTextColor(getResources().getColor(R.color.whilt));				textView2.setTextColor(getResources().getColor(R.color.black));				break;			case 1:				animation = new TranslateAnimation(offset, one, 0, 0);				textView1.setTextColor(getResources().getColor(R.color.black));				textView2.setTextColor(getResources().getColor(R.color.whilt));				break;			}			animation.setFillAfter(true);			animation.setDuration(300);			cursor.startAnimation(animation);		}		@Override		public void onPageScrollStateChanged(int arg0) {		}		@Override		public void onPageScrolled(int arg0, float arg1, int arg2) {		}	}	public class MyOnClickListener implements View.OnClickListener {		private int index = 0;		public MyOnClickListener(int i) {			index = i;		}		@Override		public void onClick(View v) {			pager.setCurrentItem(index);		}	};	@Override	public boolean onKeyDown(int keyCode, KeyEvent event) { // 按返回键时候，提示用户是否退出		showExitDialog();		return false;	}	public void showExitDialog() {		if (isFinishing()) {			return;		}		CustomAlertDialog dialog = new CustomAlertDialog(this);		dialog.setCancelable(false);		dialog.setCanceledOnTouchOutside(false);		dialog.setLeftText("退出");		dialog.setRightText("给好评");		dialog.setTitle("提示");		dialog.setMessage("这么好的软件，必需给个好评");		dialog.setOnLeftListener(new DialogInterface.OnClickListener() {			@Override			public void onClick(DialogInterface dialog, int which) {				AppManager.getAppManager().AppExit(TuiGuangActivity.this);				finish();				System.gc();			}		});		dialog.setOnRightListener(new DialogInterface.OnClickListener() {			@Override			public void onClick(DialogInterface dialog, int which) {				startPinLunActivity();			}		});		if (!isFinishing() && dialog != null) {			dialog.show();		}	}	public void startPinLunActivity() {		try {			Uri uri = Uri.parse("market://details?id=" + "com.hck.kedouzq");			Intent intent = new Intent(Intent.ACTION_VIEW, uri);			intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);			startActivity(intent);		} catch (Exception e) {		}	}}