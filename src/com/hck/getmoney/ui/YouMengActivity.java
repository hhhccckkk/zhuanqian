package com.hck.getmoney.ui;import org.json.JSONObject;import android.os.Bundle;import android.util.Log;import android.view.View;import android.widget.TextView;import com.ads8.util.PointsManager;import com.ads8.util.PointsManager.OnPointsAwardListener;import com.ads8.util.PointsManager.OnPointsQueryListener;import com.ads8.util.PointsManager.OnPointsResetListener;import com.hck.getmoney.data.Data;import com.hck.getmoney.data.HttpUrls;import com.hck.getmoney.net.JsonHttpResponseHandler;import com.hck.getmoney.net.RequestParams;import com.hck.getmoney.util.HttpUtil;import com.hck.getmoney.widget.Toasts;import com.hck.kedouzq.R;/** *  * @author *  */public class YouMengActivity extends BaseActivity {	private int num;	private String content;	private int point;	private TextView nameTextView, contenTextView;	private int kid;	private boolean isFirst = true;	@Override	protected void onCreate(Bundle savedInstanceState) {		super.onCreate(savedInstanceState);		setContentView(R.layout.activity_play_dl);		initView();		kid = getIntent().getIntExtra("kid", 0);		num = getIntent().getIntExtra("num", 5);		content = getIntent().getStringExtra("neirong");		initDate();	}	private void initView() {		nameTextView = (TextView) findViewById(R.id.play_dl_name);		contenTextView = (TextView) findViewById(R.id.play_dl_content);	}	private void initDate() {		nameTextView.setText("本区每天限制下载试用" + num + "个软件");		contenTextView.setText(content);	}	public void startGetMoney(View view) {		isFirst = false;		try {			PointsManager.getInsance(this, "UzNQN1AAdS8Am4=").showPointsWall();		} catch (Exception e) {			Toasts.toast(this, "初始化数据失败，请重试");		}			}	@Override	protected void onResume() {		super.onResume();					if (!isFirst) {				getPoint();			}			}	private void getPoint() {		try {			PointsManager.getInsance(this, "UzNQN1AAdS8Am4=").queryPoints(					new OnPointsQueryListener() {						@Override						public void onQuery(int count) {							point = 0;							point = count;							money=point;							if (point > 500) {								point = 150;							}	                        if (point>0) {	                        	savePoint();							}	                        huafei(point);						}					});		} catch (Exception e) {		}			}	private void savePoint() {		point= hashYQM(point);		params = new RequestParams();		params.put("kindid", kid + "");		params.put("num", num + "");		params.put("type", "有盟");		if (Data.userBean == null) {			Toasts.toast(this, "增加金币异常  请重新登录");			return;		}		params.put("uid", Data.userBean.getId() + "");		params.put("money", point + "");		HttpUtil.getHttpUtil().get(HttpUrls.addMoneyP, params,				new JsonHttpResponseHandler() {					@Override					public void onFinish(String url) {						super.onFinish(url);						huafei(money);					}					@Override					public void onFailure(Throwable error, String content) {						super.onFailure(error, content);						Toasts.toast(getApplicationContext(), "网络异常 增加金币失败 ");					}					@Override					public void onSuccess(int statusCode, JSONObject response) {						super.onSuccess(statusCode, response);												try {							isOk = response.getBoolean("isok");							if (isOk) {								Toasts.toast(getApplicationContext(), nt);								Data.userBean.setAllKeDouBi(Data.userBean										.getAllKeDouBi() + point);							} else {								if (response.getInt("type") == 1) {									Toasts.toast(getApplicationContext(),											"获取金币失败 本区每天限制下载" + num + "个应用  ");								} else {									Toasts.toast(getApplicationContext(),											"网络异常 增加金币失败 ");								}							}						} catch (Exception e) {							Toasts.toast(YouMengActivity.this, "网络异常 增加金币失败 ");						}					}				});	}	private void huafei(final int point) {		try {		PointsManager.getInsance(this, "UzNQN1AAdS8Am4=").awardPoints(point,				new OnPointsAwardListener() {					@Override					public void onAward(boolean arg0, int arg1) {					}				});					PointsManager.getInsance(this, "UzNQN1AAdS8Am4=").resetPoints(					new OnPointsResetListener() {						@Override						public void onReset(boolean isSuccess) {						}					});		} catch (Exception e) {		}	}	@Override	protected void onDestroy() {		super.onDestroy();	}}